version()
version
setwd("~/GitHub/Kairuhairhub/SentimentAnalysis/Sentiment-Analysis")
source("kairuSentiments.R",echo = T)
source('~/GitHub/Kairuhairhub/SentimentAnalysis/Sentiment-Analysis/kairuSentiments.R', echo=TRUE)
require("jsonlite")
################ Read in json file and make dataframe/tibble ################
dataUn1 <- stream_in(file("responsesData1.json"))
dataUn2 <- stream_in(file("responsesData2.json"))
dataUn3 <- stream_in(file("responsesData3.json"))
# Flatten the nested data frames and save as tibble
dataflat <- as_data_frame(rbind(flatten(dataUn1),flatten(dataUn2),flatten(dataUn3)))
source("kairuSentiments.R",echo = T)
# Tidy up and remove sensitive customer data
file.remove("responsesData.json")
# Tidy up and remove sensitive customer data
file.remove("responsesData1.json")
# Tidy up and remove sensitive customer data
file.remove(c("responsesData1.json","responsesData2.json")
)
# Tidy up and remove sensitive customer data
file.remove(c("responsesData1.json","responsesData2.json","responsesData3.json"))
source("kairuSentiments.R",echo = T)
source("kairuSentiments.R",echo = T)
source("kairuSentiments.R",echo = T)
# Request password
userName <- readline(prompt="Enter username:")
# Request password
userName <- readline(prompt="Enter username:")
passcode <- getPass(msg = "Enter password:")
# Create an empty handle and populate the form
h <- new_handle()
handle_setform(h, .list = list(grant_type = "password",username=userName,password=passcode))
# Remove credentials
rm(passcode)
rm(userName)
# Download the connection details and store in workspace - alternatively in a file
connection <- curl(url = "https://api.wootric.com/oauth/token",handle = h)
connectData <- readLines(connection, warn = FALSE)
# Extract the connection token - Required to download the data
pattern1 <- "access_token"
pattern2 <- "token_type"
pos1 <- regexpr(pattern1, connectData)
pos2 <- regexpr(pattern2, connectData)
keep <- substr(connectData, pos1[1]+nchar(pattern1), pos2[1]-1)
# Remove punctuation to get access token
my_access_token <- removePunctuation(keep)
my_access_token
################ Send email survey ################
h2 = new_handle()
h2 <- handle_setform(h2, list = .list(access_token=my_access_token,emails[]="beth@kairuhairhub.co.uk",survey_immediately="true",survey_settings[custom_messages][followup_text]="Thank you!",subject="Would you mind telling us how we are performing?",intro="We are constantly looking for ways to improve our service. Your opinion matters to us"))
################ Send email survey ################
h2 = new_handle()
h2 <- handle_setform(h2, list = .list(access_token=my_access_token,emails="beth@kairuhairhub.co.uk",survey_immediately="true",survey_settings[custom_messages][followup_text]="Thank you!",subject="Would you mind telling us how we are performing?",intro="We are constantly looking for ways to improve our service. Your opinion matters to us"))
h2 <- handle_setform(h2, list = .list(access_token=my_access_token,emails="beth@kairuhairhub.co.uk",survey_immediately="true",survey_settings="Thank you!",subject="Would you mind telling us how we are performing?",intro="We are constantly looking for ways to improve our service. Your opinion matters to us"))
################ Send email survey ################
h2 = new_handle()
h2 <- handle_setform(h2, .list = list(access_token=my_access_token,emails[]="beth@kairuhairhub.co.uk",survey_immediately="true",survey_settings[custom_messages][followup_text]="Thank you!",subject="Would you mind telling us how we are performing?",intro="We are constantly looking for ways to improve our service. Your opinion matters to us"))
h2 <- handle_setform(h2, .list = list(access_token=my_access_token,emails="beth@kairuhairhub.co.uk",survey_immediately="true",survey_settings[custom_messages][followup_text]="Thank you!",subject="Would you mind telling us how we are performing?",intro="We are constantly looking for ways to improve our service. Your opinion matters to us"))
h2 <- handle_setform(h2, .list = list(access_token=my_access_token,emails="beth@kairuhairhub.co.uk",survey_immediately="true",survey_settings="Thank you!",subject="Would you mind telling us how we are performing?",intro="We are constantly looking for ways to improve our service. Your opinion matters to us"))
curl(url = "https://api.wootric.com/v1/email_survey", handle = h2)
?curl
curl(url = "https://api.wootric.com/v1/email_survey", handle = h2, open = "rb")
curl(url = "https://api.wootric.com/v1/email_survey", handle = h2, open = "r")
source("kairuSentiments.R",echo = T)
source('~/GitHub/Kairuhairhub/SentimentAnalysis/Sentiment-Analysis/kairuSentiments.R', echo=TRUE)
source("kairuSentiments.R",echo = TRUE)
source("kairuSentiments.R",echo = TRUE)
source("kairuSentiments.R",echo = T)
source("kairuSentiments.R",echo = T)
source("kairuSentiments.R",echo = T)
source("kairuSentiments.R",echo = T)
View(data_clean)
source('~/GitHub/Kairuhairhub/SentimentAnalysis/Sentiment-Analysis/textAna.R', echo=TRUE)
source("kairuSentiments.R",echo = T)
# Count the words and plot (atleast those used more than 3 times)
data_tidy %>%
dplyr::count(word,sort = T) %>%
dplyr::filter(n >= 3) %>%
dplyr::mutate(word = reorder(word,n)) %>%
ggplot2::ggplot(ggplot2::aes(word,n)) +
ggplot2::geom_col() +
ggplot2::xlab("Words") +
ggplot2::ylab("Frequency") +
ggplot2::coord_flip()
source('~/GitHub/Kairuhairhub/SentimentAnalysis/Sentiment-Analysis/kairuSentiments.R', echo=TRUE)
View(dataflat)
quit('no')
